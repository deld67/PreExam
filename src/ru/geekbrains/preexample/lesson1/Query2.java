package ru.geekbrains.preexample.lesson1;
/*
* Ошибки и предложения по коду:
* 1. Предложение: функции в интерфейсах Moveable и Stopable явно прописать как public.
* Так понятнее для восприятия.
* 2. Ошибка: в классе Car установлена public переменная: public Engine engine; Зачем, если для доступа к ней
* мы в * классе прописали  getter и setter. Сделать её private
* 3.Предложение: protected void start() - защищенный метод внутри класса Car нигде не используется,
* снаружи он напрямую не доступен. Зачем он нужен не понятно. надо убрать
* 4.Предложение: abstract void open(); - раз уж мы определили интерфейсы, то и метод open(); тоже следует сделать
*  интерфейсом.
* 5.Предложение:интерфейсы  Moveable, Stopable и преобразованный в интерфейс абстрактный метод open я бы объединил
*  в единый интерфейс Drive.
* Сомневаюсь, что появится машина для которой хотябы один из них окажется не нужен.
* 6.Предложение: исходя из п.3 класс LightWeightCar должен будет имплеминтировать интерфейс Drive и реализовывать
*  все методы. Ибо не понятно почему машина этого класса не должна уметь останавливаться
* 7. Ошибка: class Lorry extends Car, Moveable, Stopable - класс не может наследоваться (extends) от интерфейсов
* (должно быть implements) и несколько классов не могут указываться при наследовании
* (это если считать Moveable, Stopable какими-то внешними классами)
* и после имплементации интерфейсов Moveable, Stopable функции move и stop должны быть переопределены (@Override)
* */

public class Query2 {
}
